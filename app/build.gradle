plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'kotlin-android-extensions'
}

android {

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    signingConfigs{
        release {
            storeFile file("$rootProject.projectDir/keystores/mvvm_key_store.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }

    defaultConfig {
        applicationId "com.example.mvvm_practices_design_parttern"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
}

configurations {
    ktlint
}
task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint
task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

dependencies {

    def dagger_version = "2.27"
    def lifecycle_version = "2.3.1"
    def room_version = "2.3.0"
    def google_services="12.0.1"
    def viewPagerVersion = "1.0.0"
    def glide_version = "4.9.0"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.viewpager2:viewpager2:$viewPagerVersion"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Places library
    implementation 'com.google.android.libraries.places:places:2.0.0'
    // PING Place Picker
    implementation 'com.github.rtchagas:pingplacepicker:2.0.+'

    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.amitshekhar.android:android-networking:1.0.2'
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    // Skeleton
    implementation 'com.github.skydoves:androidveil:1.0.8'
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'

    //ktlint
    ktlint "com.pinterest:ktlint:0.41.0"
    //Dagger2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    //retrofit and json
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.moshi:moshi:1.11.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.11.0"
    implementation 'com.google.code.gson:gson:2.8.5'

    //RxJava
    implementation 'io.reactivex:rxjava:1.1.6'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0"

    //lifecyclce
//    implementation 'android.arch.lifecycle:extensions:1.1.1'
//    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'
//    testImplementation 'android.arch.core:core-testing:1.1.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Also declare the dependency for the Google Play services library and specify its version
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

//    // ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
//    // LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
//    // Lifecycles only (without ViewModel or LiveData)
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
//    // Saved state module for ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"



}
